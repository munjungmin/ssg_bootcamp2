class  DataType2{
	public static void main(String[] args) {
		// 문자: char (2)
		// 숫자: 정수 byte (1)< short (2) < int (4) < long (8)
		//		    실수 float (4) < double (8)
		// 논리값: boolean(1)
			
		// char와 숫자는 서로 변환 가능 
		// boolean은 1, 0으로 변환 불가능 
		
		byte b = 5;
		short s = 7;
		byte x = 8;
//		b=x;  // 대입연산 뿐만 아니라, 일반적으로 연산자가 동작하기 위해서는 연산대상이 되는 데이터는 자료형이 동일해야 한다. 
		s = b;  // 이 코드는 연산대상이 되는 피연산자들이 동일하지 않기 때문에 java 컴파일러가 자료형을 동일하게 변환시킨다. 
					// 즉 개발자가 처리한 것이 아니라 컴파일러에 의한 형변환을 자동형변환이라 한다. 
					// 1) 같은 숫자라는 가족 
					// 2) 작은 것을 큰 자료형에 대입하고 있으므로, 데이터 손실이 발생하지 않는다.
		b=(byte)s; // 개발자가 데이터의 손실을 감안해서라도, 원하는 같은 종류의 자료형으로 변환하는 것을 강제형변환이라고 함
						// 이때 사용되는 ()를 cast 연산자라고 한다. 
						// 주의) 형변환(강제든 자동이든)은 언제나 같은 종류끼리 지원 
						
		char c = 'B';  // 컴파일타임에 java 컴파일러가 귀찮음을 감수하고 유니코드를 찾아봄
		char d = '한'; 
		char k = 96;  // 인간이 유니코드를 찾아서 직접 넣어준 것으로 생각하여 고마워함
		//char m = -30;  // char형은 사실상 숫자형은 맞으나, 여기 담을 수 있는 수는 아스키코드를 포함한 유니코드를 담기 위한 용도이다. 
								// 키코드 체계에서는 음수 지원하지 않기 때문에 에러 발생함 
		s = (short)k;
	} 
}
