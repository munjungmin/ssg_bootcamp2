<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "mybatis-3-mapper.dtd">
<mapper namespace="News"> 


	<!-- mybatis를 사용하다보면, 자동으로 매핑을 할 수 없는 경우가 있다. 
		이때는 개발자가 매핑을 수동으로 시도할 수 있다.
		1번 news 레코드에 대해 우루루 채우고 자식도 가서 우루루 수집 
		..
		n번 
		
	-->
	<resultMap type="News" id="CommentMap">
		<id column="news_id" property="news_id"/>  <!-- 어떤 컬럼을 java 어디 넣을건지 -->
		<result column="title" property="title"/>
		<result column="writer" property="writer"/>
		<result column="content" property="content"/>
		<result column="regdate" property="regdate"/>
		<result column="hit" property="hit"/>
		<collection column="news_id" javaType="java.util.List" ofType="Comment" property="commentList"
			select="Comment.selectByNewsId"/>  <!-- 자식에 news_id를 찾아서  -->
	</resultMap>
	
	<!-- 모든 레코드 가져오기 -->
	<select id="selectAll" resultType="News" resultMap="CommentMap">
		select news_id, title, writer, content, regdate, hit from news order by news_id desc
	</select>
	
	<!-- 한 건 등록 -->
	<insert id="insert" parameterType="News">
		insert into news(title, writer, content) values(#{title}, #{writer}, #{content})
	</insert>
	
	<!-- 한 건 가져오기 -->
	<select id="select" parameterType="int" resultType="News">
		select * from news where news_id = #{news_id}
	</select>
	
	<!-- 각 뉴스기사의 정보와 딸려있는 코멘트 수  
	<selec>
		select n.title, n.writer, n.regdate, count(n.news_id) from news n
		right outer join comment c 
		on n.news_id = c.news_id
		group by n.news_id
	</selec>
	 -->
</mapper>

